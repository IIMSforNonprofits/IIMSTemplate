// <auto-generated />
using System;
using Mahenta.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mahenta.Migrations.InvMgmtDb
{
    [DbContext(typeof(InvMgmtDbContext))]
    [Migration("20190204020455_seeddata")]
    partial class seeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mahenta.Models.Donor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CompanyName");

                    b.Property<int>("DonorEntity");

                    b.Property<string>("DonorName")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("JobTitle");

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<int>("TotalDonations");

                    b.HasKey("ID");

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("Mahenta.Models.Log", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionTaken")
                        .IsRequired();

                    b.Property<string>("EmployeeID")
                        .IsRequired();

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("ID");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Mahenta.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptPartialShip");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("EmployeeID")
                        .IsRequired();

                    b.Property<int>("PartialOrderID");

                    b.Property<DateTime>("ShipDate");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mahenta.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Availability");

                    b.Property<string>("Color");

                    b.Property<string>("Condition");

                    b.Property<string>("Description");

                    b.Property<int>("DonorID");

                    b.Property<string>("EstimatedValue");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("OrderID");

                    b.Property<string>("Size");

                    b.Property<string>("Sku")
                        .IsRequired();

                    b.Property<string>("Use");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Availability = 0,
                            Description = "It's crumptious, when it crunches",
                            DonorID = 1,
                            Name = "Crunch Bar",
                            Sku = "PROD001"
                        },
                        new
                        {
                            ID = 2,
                            Availability = 0,
                            Description = "It's out of this woooooorld",
                            DonorID = 2,
                            Name = "Mars bar",
                            Sku = "PROD002"
                        },
                        new
                        {
                            ID = 3,
                            Availability = 0,
                            Description = "Guess whose back...wait wrong kind of wrapper",
                            DonorID = 3,
                            Name = "M&Ms",
                            Sku = "PROD003"
                        },
                        new
                        {
                            ID = 4,
                            Availability = 0,
                            Description = "M&Ms without chocolate",
                            DonorID = 4,
                            Name = "Skittles",
                            Sku = "PROD004"
                        },
                        new
                        {
                            ID = 5,
                            Availability = 0,
                            Description = "Left, left, right, right...",
                            DonorID = 5,
                            Name = "Twix",
                            Sku = "PROD005"
                        },
                        new
                        {
                            ID = 6,
                            Availability = 0,
                            Description = "Pokey",
                            DonorID = 6,
                            Name = "Pocky",
                            Sku = "PROD006"
                        },
                        new
                        {
                            ID = 7,
                            Availability = 0,
                            Description = "ha, I wish",
                            DonorID = 7,
                            Name = "100 Grand",
                            Sku = "PROD007"
                        });
                });

            modelBuilder.Entity("Mahenta.Models.Product", b =>
                {
                    b.HasOne("Mahenta.Models.Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderID");
                });
#pragma warning restore 612, 618
        }
    }
}
